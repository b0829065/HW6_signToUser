{"version":3,"sources":["reportWebVitals.js","ToDoAddForm.js","ToDoTitle.js","ToDo.js","App.js","sign_in.js","index.js","forget.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ToDoAddForm","props","state","newText","todo","text","editing","this","remove","id","checkToggle","setState","e","target","value","saveEditedValue","className","completed","onClick","checkTodoToggle","onDoubleClick","showEditForm","type","placeholder","onChange","getNewText","deleteTodo","React","Component","ToDoTitle","style","color","ToDo","todos","newId","preventDefault","newTodos","filter","item","map","getNewValue","addTodo","Copyright","Typography","variant","align","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","ReactDOM","render","exact","path","component","classes","Grid","container","CssBaseline","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","to","Button","Link","Box","mt","document","getElementById"],"mappings":"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","file":"static/js/main.5481062a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nclass ToDoAddForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n\r\n        this.state = {\r\n            newText: props.todo.text,\r\n            editing: false,\r\n        }\r\n    }\r\n    \r\n    // 刪除\r\n    deleteTodo () {\r\n        this.props.remove(this.props.todo.id);\r\n    }\r\n\r\n    // 完成\r\n    checkTodoToggle () {\r\n        this.props.checkToggle(this.props.todo.id);\r\n    }\r\n\r\n    // 顯示編輯表單\r\n    showEditForm() {\r\n        const {editing} = this.state;\r\n\r\n        this.setState({\r\n            newText: this.props.todo.text,\r\n            editing: !editing,\r\n        });\r\n    }\r\n\r\n    // 取表單輸入內容\r\n    getNewText(e) {\r\n        const newText = e.target.value;\r\n\r\n        this.setState({\r\n            newText: newText,\r\n        });\r\n        \r\n    }\r\n    \r\n    // 儲存編輯資料\r\n    saveEditedValue() {\r\n        const {newText} = this.state;\r\n\r\n        this.props.saveEditedValue(this.props.todo.id, newText);\r\n        this.setState({\r\n            newText: this.props.todo.text,\r\n            editing: false,\r\n        });\r\n    }\r\n    \r\n\r\n    render () {\r\n        const {editing} = this.state;\r\n        const {todo} = this.props;\r\n        \r\n        //console.log(this.state)\r\n\r\n        return (\r\n            <li className={ \"list-group-item list-row \" + (todo.completed ? \"done\" : \"\") }>\r\n                <div className=\"btn-circle checkbox\" onClick={() => this.checkTodoToggle()} >✓</div>\r\n                <div className=\"list-text__container\" onDoubleClick={() => this.showEditForm()}>\r\n                    { \r\n                        !editing && <span className=\"list-text\">{ todo.text }</span> \r\n                    }\r\n                    {\r\n                        editing && \r\n                        <div className={\"input-group\"}>\r\n                            <input type=\"text\" className=\"form-control\" placeholder={todo.text} value={this.state.newText} onChange={(e) => this.getNewText(e)}/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.showEditForm()}>取消</button>\r\n                                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.saveEditedValue()}>完成編輯</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                <div className=\"btn-circle delete\" onClick={() => this.deleteTodo()} >✕</div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\nexport default ToDoAddForm;","import React from 'react';\r\nclass ToDoTitle extends React.Component {\r\n    render () {\r\n        const x={color:'#b0efeb'};\r\n    return <h1 style={x}>CGU Todo list</h1>;\r\n    }\r\n   }\r\n   export default ToDoTitle;","import './App.css';\nimport React from 'react';\nimport ToDoAddForm from './ToDoAddForm';\nimport ToDoTitle from './ToDoTitle';\nclass ToDo extends React.Component {\n  constructor (props) {\n      super (props);\n\n      this.state = {\n        todos: [\n            {id: 1, text: 'tip：點文字兩下可以編輯', completed: false},\n            {id: 2, text: '好啦這次', completed: true},\n            {id: 3, text: '身為血輪眼', completed: false},\n            {id: 4, text: '人稱拷貝忍者', completed: false},\n            {id: 5, text: '從原本的完全拷貝，感覺可以知道人家的術式了，領域展開！', completed: false},\n        ],\n        newId: 6,\n        newText: '',\n    }\n  }\n  \n  // 取 todo 的內容\n  getNewValue (e) {\n      const newText = e.target.value;\n      \n      this.setState({\n          newText: newText,\n      });\n  }\n  \n\n  // 新增\n  addTodo (e) {\n      const {todos, newText, newId} = this.state;\n      \n      if (!newText) {\n          e.preventDefault();\n          return;\n      }\n      \n      this.setState({\n          todos: [\n              ...todos,\n              {id: newId, text: newText, completed: false}\n          ],\n          newId: newId +1,\n          newText: '',\n      });\n  }\n\n  // 刪除\n  deleteTodo (id) {\n      const {todos} = this.state;\n      \n      let newTodos = todos.filter((item) => item.id !== id);\n      \n      this.setState({\n          todos: newTodos,\n      });        \n  }\n\n  // 完成\n  checkTodoToggle (id) {\n      const {todos} = this.state;\n\n      let newTodos = todos.map((item) => {\n          if(item.id === id){\n              item.completed = !item.completed;\n          }\n          return item;\n      });\n      \n      this.setState({\n          todos: newTodos,\n      })\n  }\n\n\n  // 編輯\n  saveEditedValue(id, value) {\n      const {todos} = this.state;\n\n      let newTodos = todos.map((item) => {\n          if(item.id === id){\n              item.text = value;\n          }\n          return item;\n      });\n      \n      this.setState({\n          todos: newTodos,\n      })\n  }\n  \n\n\n  render () {\n      let {todos} = this.state;\n      \n      //console.log(todos)\n\n      return (\n          <div className=\"container\">\n              <header className=\"header__container\">\n                <ToDoTitle></ToDoTitle>\n              </header>\n              <div className=\"input-group mb-3\">\n                  <input type=\"text\" className=\"form-control\" id=\"input-add\" placeholder=\"add a new todo\"\n                      value={this.state.newText}\n                      onChange={(e) => this.getNewValue(e)} />\n                  <span className=\"input-group-append\">\n                      <button\n                          className=\"btn btn-outline-secondary\"\n                          onClick={(e) => this.addTodo(e)}\n                      >Add</button>\n                  </span>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                  {todos.map((todo) =>\n                      <ToDoAddForm\n                          key={todo.id}\n                          todo={todo}\n                          remove={(id) => this.deleteTodo(id)}\n                          checkToggle={(id) => this.checkTodoToggle(id)}\n                          saveEditedValue={(id, value) => this.saveEditedValue(id, value)}\n                      />\n                  )}\n              </ul>\n          </div>\n      );\n  }\n}\n// function App() {\n//   return (\n//     <div>{git()}</div>\n//   );\n// }\n\nexport default ToDo;","//have bug with index\nimport React from 'react';\n// import Todo from './拆解TextEdit';\nimport ToDoAddForm from './ToDoAddForm';\nimport ToDoTitle from './ToDoTitle';\n\nclass App extends React.Component {\n    constructor (props) {\n        super (props);\n\n        this.state = {\n            todos: [\n                {id: 1, text: 'tip：點文字兩下可以編輯', completed: false},\n                {id: 2, text: '好啦這次', completed: true},\n                {id: 3, text: '身為血輪眼', completed: false},\n                {id: 4, text: '人稱拷貝忍者', completed: false},\n                {id: 5, text: '從原本的完全拷貝，感覺可以知道人家的術式了，領域展開！', completed: false},\n            ],\n            newId: 6,\n            newText: '',\n        }\n    }\n    \n    // 取 todo 的內容\n    getNewValue (e) {\n        const newText = e.target.value;\n        \n        this.setState({\n            newText: newText,\n        });\n    }\n    \n\n    // 新增\n    addTodo (e) {\n        const {todos, newText, newId} = this.state;\n        \n        if (!newText) {\n            e.preventDefault();\n            return;\n        }\n        \n        this.setState({\n            todos: [\n                ...todos,\n                {id: newId, text: newText, completed: false}\n            ],\n            newId: newId +1,\n            newText: '',\n        });\n    }\n\n    // 刪除\n    deleteTodo (id) {\n        const {todos} = this.state;\n        \n        let newTodos = todos.filter((item) => item.id !== id);\n        \n        this.setState({\n            todos: newTodos,\n        });        \n    }\n\n    // 完成\n    checkTodoToggle (id) {\n        const {todos} = this.state;\n\n        let newTodos = todos.map((item) => {\n            if(item.id === id){\n                item.completed = !item.completed;\n            }\n            return item;\n        });\n        \n        this.setState({\n            todos: newTodos,\n        })\n    }\n\n\n    // 編輯\n    saveEditedValue(id, value) {\n        const {todos} = this.state;\n\n        let newTodos = todos.map((item) => {\n            if(item.id === id){\n                item.text = value;\n            }\n            return item;\n        });\n        \n        this.setState({\n            todos: newTodos,\n        })\n    }\n    \n\n\n    render () {\n        let {todos} = this.state;\n        \n        //console.log(todos)\n\n        return (\n            <div className=\"container\">\n                <header className=\"header__container\">\n                    <ToDoTitle></ToDoTitle>\n                    <h1 className=\"header__site-title\">Todo list</h1>\n                    <p className=\"header__site-description\">馬上 記下 想要做的任何事</p>\n                </header>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" className=\"form-control\" id=\"input-add\" placeholder=\"I'm gonna do...\"\n                        value={this.state.newText}\n                        onChange={(e) => this.getNewValue(e)} />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            onClick={(e) => this.addTodo(e)}\n                        >add</button>\n                    </div>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                    {todos.map((todo) =>\n                        <ToDoAddForm\n                            key={todo.id}\n                            todo={todo}\n                            remove={(id) => this.deleteTodo(id)}\n                            checkToggle={(id) => this.checkTodoToggle(id)}\n                            saveEditedValue={(id, value) => this.saveEditedValue(id, value)}\n                        />\n                    )}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n// function App() {\n//   return (\n//     <div>{git()}</div>\n//   );\n// }????? APP為index的子結點","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import shareButton from './shareButton'\r\n// import bar from './bar.js'\r\n// import hashtag from './hashTag.js'\r\n// import infoCgu from './infoCgu.js'\r\nimport forget from './forget';\r\nimport App from './App';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Link,\r\n} from 'react-router-dom'\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website 由material-ui提供基礎模組\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nexport { makeStyles }\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n  // const styleArgument = { color: 'goldenrod' };\r\n  // const changeText = (event) => {\r\n  //   console.log(event.target)\r\n  //   event.target.innerText = event.target.innerText + \" 你的帳號密碼我就收下了！\"\r\n  // }\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            <p>\r\n              長庚大學 CGU</p>\r\n            <hr></hr>\r\n          學術店堂登入介面\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"帳號吃吃\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"密碼吃吃\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            {/* <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={changeText}\r\n            > 重點是Link*/}          \r\n            <switch>\r\n              <Link to=\"/about\"> <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button></Link>\r\n            </switch>\r\n           \r\n           {forget()}\r\n\r\n            {/* <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","// import React from 'react'; 原本的\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  HashRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\nimport ToDo from './ToDo';\nimport SignInSide from './sign_in';\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Route  exact path=\"/\" component={SignInSide}/>\n      <Route  path=\"/about\" >\n      <ToDo/>\n      </Route>\n    </div>\n  </Router>,\n  document.getElementById('root'));\n  reportWebVitals();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","import Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nexport default function forget()\n{\n    //const classes = useStyles();\n    return(\n        <Grid container>\n        <Grid item xs>\n          <Link href=\"https://support.google.com/mail/answer/41078?co=GENIE.Platform%3DDesktop&hl=zh-Hant\" variant=\"body2\">\n            ...齁\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link href=\"#\" variant=\"body2\">\n            {\"註冊一下吧!\"}\n          </Link>\n        </Grid>\n      </Grid>\n    )\n}"],"sourceRoot":""}